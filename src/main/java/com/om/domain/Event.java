package com.om.domain;
// Generated 2015-11-19 11:30:47 by Hibernate Tools 4.0.0


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Event generated by hbm2java
 */
@Entity
@Table(name="event"
    ,catalog="networkpublicopinionmap"
)
public class Event  implements java.io.Serializable {


     private String eventId;
     private String eventTitle;
     private String eventAbstract;
     private Date generateTime;
     private String featureVector;
     private String state;
     private Double eventHeat;
     private Set<EventSpread> eventSpreads = new HashSet<EventSpread>(0);
     private Set<EventFactor> eventFactors = new HashSet<EventFactor>(0);
     private Set<EventPeople> eventPeoples = new HashSet<EventPeople>(0);
     private Set<DataEvent> dataEvents = new HashSet<DataEvent>(0);

    public Event() {
    }

	
    public Event(String eventId) {
        this.eventId = eventId;
    }
    public Event(String eventId, String eventTitle, String eventAbstract, Date generateTime, String featureVector, String state, Double eventHeat, Set<EventSpread> eventSpreads, Set<EventFactor> eventFactors, Set<EventPeople> eventPeoples, Set<DataEvent> dataEvents) {
       this.eventId = eventId;
       this.eventTitle = eventTitle;
       this.eventAbstract = eventAbstract;
       this.generateTime = generateTime;
       this.featureVector = featureVector;
       this.state = state;
       this.eventHeat = eventHeat;
       this.eventSpreads = eventSpreads;
       this.eventFactors = eventFactors;
       this.eventPeoples = eventPeoples;
       this.dataEvents = dataEvents;
    }
   
     @Id 

    
    @Column(name="event_id", unique=true, nullable=false, length=32)
    public String getEventId() {
        return this.eventId;
    }
    
    public void setEventId(String eventId) {
        this.eventId = eventId;
    }

    
    @Column(name="event_title", length=500)
    public String getEventTitle() {
        return this.eventTitle;
    }
    
    public void setEventTitle(String eventTitle) {
        this.eventTitle = eventTitle;
    }

    
    @Column(name="event_abstract", length=65535)
    public String getEventAbstract() {
        return this.eventAbstract;
    }
    
    public void setEventAbstract(String eventAbstract) {
        this.eventAbstract = eventAbstract;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="generate_time", length=10)
    public Date getGenerateTime() {
        return this.generateTime;
    }
    
    public void setGenerateTime(Date generateTime) {
        this.generateTime = generateTime;
    }

    
    @Column(name="feature_vector", length=65535)
    public String getFeatureVector() {
        return this.featureVector;
    }
    
    public void setFeatureVector(String featureVector) {
        this.featureVector = featureVector;
    }

    
    @Column(name="state", length=20)
    public String getState() {
        return this.state;
    }
    
    public void setState(String state) {
        this.state = state;
    }

    
    @Column(name="event_heat", precision=22, scale=0)
    public Double getEventHeat() {
        return this.eventHeat;
    }
    
    public void setEventHeat(Double eventHeat) {
        this.eventHeat = eventHeat;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="event")
    public Set<EventSpread> getEventSpreads() {
        return this.eventSpreads;
    }
    
    public void setEventSpreads(Set<EventSpread> eventSpreads) {
        this.eventSpreads = eventSpreads;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="event")
    public Set<EventFactor> getEventFactors() {
        return this.eventFactors;
    }
    
    public void setEventFactors(Set<EventFactor> eventFactors) {
        this.eventFactors = eventFactors;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="event")
    public Set<EventPeople> getEventPeoples() {
        return this.eventPeoples;
    }
    
    public void setEventPeoples(Set<EventPeople> eventPeoples) {
        this.eventPeoples = eventPeoples;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="event")
    public Set<DataEvent> getDataEvents() {
        return this.dataEvents;
    }
    
    public void setDataEvents(Set<DataEvent> dataEvents) {
        this.dataEvents = dataEvents;
    }




}


