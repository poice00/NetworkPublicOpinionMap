package com.om.domain;
// Generated 2015-11-19 11:30:47 by Hibernate Tools 4.0.0


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Comment generated by hbm2java
 */
@Entity
@Table(name="comment"
    ,catalog="networkpublicopinionmap"
)
public class Comment  implements java.io.Serializable {


     private String commentId;
     private Writer writerByAtSomeone;
     private Writer writerByWriterId;
     private Comment comment;
     private DataSource dataSource;
     private String commentContent;
     private Date commentTime;
     private Date grabTime;
     private String state;
     private String commentType;
     private Double emotionValue;
     private Set<Comment> comments = new HashSet<Comment>(0);

    public Comment() {
    }

	
    public Comment(String commentId, DataSource dataSource) {
        this.commentId = commentId;
        this.dataSource = dataSource;
    }
    public Comment(String commentId, Writer writerByAtSomeone, Writer writerByWriterId, Comment comment, DataSource dataSource, String commentContent, Date commentTime, Date grabTime, String state, String commentType, Double emotionValue, Set<Comment> comments) {
       this.commentId = commentId;
       this.writerByAtSomeone = writerByAtSomeone;
       this.writerByWriterId = writerByWriterId;
       this.comment = comment;
       this.dataSource = dataSource;
       this.commentContent = commentContent;
       this.commentTime = commentTime;
       this.grabTime = grabTime;
       this.state = state;
       this.commentType = commentType;
       this.emotionValue = emotionValue;
       this.comments = comments;
    }
   
     @Id 

    
    @Column(name="comment_id", unique=true, nullable=false, length=32)
    public String getCommentId() {
        return this.commentId;
    }
    
    public void setCommentId(String commentId) {
        this.commentId = commentId;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="at_someone")
    public Writer getWriterByAtSomeone() {
        return this.writerByAtSomeone;
    }
    
    public void setWriterByAtSomeone(Writer writerByAtSomeone) {
        this.writerByAtSomeone = writerByAtSomeone;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="writer_id")
    public Writer getWriterByWriterId() {
        return this.writerByWriterId;
    }
    
    public void setWriterByWriterId(Writer writerByWriterId) {
        this.writerByWriterId = writerByWriterId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="parent_id")
    public Comment getComment() {
        return this.comment;
    }
    
    public void setComment(Comment comment) {
        this.comment = comment;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="data_source_id", nullable=false)
    public DataSource getDataSource() {
        return this.dataSource;
    }
    
    public void setDataSource(DataSource dataSource) {
        this.dataSource = dataSource;
    }

    
    @Column(name="comment_content", length=65535)
    public String getCommentContent() {
        return this.commentContent;
    }
    
    public void setCommentContent(String commentContent) {
        this.commentContent = commentContent;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="comment_time", length=10)
    public Date getCommentTime() {
        return this.commentTime;
    }
    
    public void setCommentTime(Date commentTime) {
        this.commentTime = commentTime;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="grab_time", length=10)
    public Date getGrabTime() {
        return this.grabTime;
    }
    
    public void setGrabTime(Date grabTime) {
        this.grabTime = grabTime;
    }

    
    @Column(name="state", length=20)
    public String getState() {
        return this.state;
    }
    
    public void setState(String state) {
        this.state = state;
    }

    
    @Column(name="comment_type", length=20)
    public String getCommentType() {
        return this.commentType;
    }
    
    public void setCommentType(String commentType) {
        this.commentType = commentType;
    }

    
    @Column(name="emotion_value", precision=22, scale=0)
    public Double getEmotionValue() {
        return this.emotionValue;
    }
    
    public void setEmotionValue(Double emotionValue) {
        this.emotionValue = emotionValue;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="comment")
    public Set<Comment> getComments() {
        return this.comments;
    }
    
    public void setComments(Set<Comment> comments) {
        this.comments = comments;
    }




}


