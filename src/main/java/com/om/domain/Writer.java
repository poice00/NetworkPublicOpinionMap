package com.om.domain;
// Generated 2015-11-19 11:30:47 by Hibernate Tools 4.0.0


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Writer generated by hbm2java
 */
@Entity
@Table(name="writer"
    ,catalog="networkpublicopinionmap"
)
public class Writer  implements java.io.Serializable {


     private String writerId;
     private String writerName;
     private String writerUrl;
     private Date registerTime;
     private Date grabTime;
     private String state;
     private String writerArea;
     private Integer articleNum;
     private Integer replyNum;
     private Date lastLoginTime;
     private Integer score;
     private Integer loginTimes;
     private Float emotionTrend;
     private Float influenceIndex;
     private Float activeIndex;
     private Integer totalBrowseNum;
     private Integer totalReplyNum;
     private String website;
     private Integer fansNum;
     private Integer attentionNum;
     private String calState;
     private WriterFactor writerFactor;
     private Set<Comment> commentsForAtSomeone = new HashSet<Comment>(0);
     private Set<DataSource> dataSources = new HashSet<DataSource>(0);
     private Set<Comment> commentsForWriterId = new HashSet<Comment>(0);

    public Writer() {
    }

	
    public Writer(String writerId) {
        this.writerId = writerId;
    }
    public Writer(String writerId, String writerName, String writerUrl, Date registerTime, Date grabTime, String state, String writerArea, Integer articleNum, Integer replyNum, Date lastLoginTime, Integer score, Integer loginTimes, Float emotionTrend, Float influenceIndex, Float activeIndex, Integer totalBrowseNum, Integer totalReplyNum, String website, Integer fansNum, Integer attentionNum, String calState, WriterFactor writerFactor, Set<Comment> commentsForAtSomeone, Set<DataSource> dataSources, Set<Comment> commentsForWriterId) {
       this.writerId = writerId;
       this.writerName = writerName;
       this.writerUrl = writerUrl;
       this.registerTime = registerTime;
       this.grabTime = grabTime;
       this.state = state;
       this.writerArea = writerArea;
       this.articleNum = articleNum;
       this.replyNum = replyNum;
       this.lastLoginTime = lastLoginTime;
       this.score = score;
       this.loginTimes = loginTimes;
       this.emotionTrend = emotionTrend;
       this.influenceIndex = influenceIndex;
       this.activeIndex = activeIndex;
       this.totalBrowseNum = totalBrowseNum;
       this.totalReplyNum = totalReplyNum;
       this.website = website;
       this.fansNum = fansNum;
       this.attentionNum = attentionNum;
       this.calState = calState;
       this.writerFactor = writerFactor;
       this.commentsForAtSomeone = commentsForAtSomeone;
       this.dataSources = dataSources;
       this.commentsForWriterId = commentsForWriterId;
    }
   
     @Id 

    
    @Column(name="writer_id", unique=true, nullable=false, length=32)
    public String getWriterId() {
        return this.writerId;
    }
    
    public void setWriterId(String writerId) {
        this.writerId = writerId;
    }

    
    @Column(name="writer_name", length=50)
    public String getWriterName() {
        return this.writerName;
    }
    
    public void setWriterName(String writerName) {
        this.writerName = writerName;
    }

    
    @Column(name="writer_url", length=200)
    public String getWriterUrl() {
        return this.writerUrl;
    }
    
    public void setWriterUrl(String writerUrl) {
        this.writerUrl = writerUrl;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="register_time", length=10)
    public Date getRegisterTime() {
        return this.registerTime;
    }
    
    public void setRegisterTime(Date registerTime) {
        this.registerTime = registerTime;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="grab_time", length=10)
    public Date getGrabTime() {
        return this.grabTime;
    }
    
    public void setGrabTime(Date grabTime) {
        this.grabTime = grabTime;
    }

    
    @Column(name="state", length=20)
    public String getState() {
        return this.state;
    }
    
    public void setState(String state) {
        this.state = state;
    }

    
    @Column(name="writer_area", length=50)
    public String getWriterArea() {
        return this.writerArea;
    }
    
    public void setWriterArea(String writerArea) {
        this.writerArea = writerArea;
    }

    
    @Column(name="article_num")
    public Integer getArticleNum() {
        return this.articleNum;
    }
    
    public void setArticleNum(Integer articleNum) {
        this.articleNum = articleNum;
    }

    
    @Column(name="reply_num")
    public Integer getReplyNum() {
        return this.replyNum;
    }
    
    public void setReplyNum(Integer replyNum) {
        this.replyNum = replyNum;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="last_login_time", length=10)
    public Date getLastLoginTime() {
        return this.lastLoginTime;
    }
    
    public void setLastLoginTime(Date lastLoginTime) {
        this.lastLoginTime = lastLoginTime;
    }

    
    @Column(name="score")
    public Integer getScore() {
        return this.score;
    }
    
    public void setScore(Integer score) {
        this.score = score;
    }

    
    @Column(name="login_times")
    public Integer getLoginTimes() {
        return this.loginTimes;
    }
    
    public void setLoginTimes(Integer loginTimes) {
        this.loginTimes = loginTimes;
    }

    
    @Column(name="emotion_trend", precision=12, scale=0)
    public Float getEmotionTrend() {
        return this.emotionTrend;
    }
    
    public void setEmotionTrend(Float emotionTrend) {
        this.emotionTrend = emotionTrend;
    }

    
    @Column(name="influence_index", precision=12, scale=0)
    public Float getInfluenceIndex() {
        return this.influenceIndex;
    }
    
    public void setInfluenceIndex(Float influenceIndex) {
        this.influenceIndex = influenceIndex;
    }

    
    @Column(name="active_index", precision=12, scale=0)
    public Float getActiveIndex() {
        return this.activeIndex;
    }
    
    public void setActiveIndex(Float activeIndex) {
        this.activeIndex = activeIndex;
    }

    
    @Column(name="total_browse_num")
    public Integer getTotalBrowseNum() {
        return this.totalBrowseNum;
    }
    
    public void setTotalBrowseNum(Integer totalBrowseNum) {
        this.totalBrowseNum = totalBrowseNum;
    }

    
    @Column(name="total_reply_num")
    public Integer getTotalReplyNum() {
        return this.totalReplyNum;
    }
    
    public void setTotalReplyNum(Integer totalReplyNum) {
        this.totalReplyNum = totalReplyNum;
    }

    
    @Column(name="website", length=20)
    public String getWebsite() {
        return this.website;
    }
    
    public void setWebsite(String website) {
        this.website = website;
    }

    
    @Column(name="fans_num")
    public Integer getFansNum() {
        return this.fansNum;
    }
    
    public void setFansNum(Integer fansNum) {
        this.fansNum = fansNum;
    }

    
    @Column(name="attention_num")
    public Integer getAttentionNum() {
        return this.attentionNum;
    }
    
    public void setAttentionNum(Integer attentionNum) {
        this.attentionNum = attentionNum;
    }

    
    @Column(name="cal_state", length=32)
    public String getCalState() {
        return this.calState;
    }
    
    public void setCalState(String calState) {
        this.calState = calState;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="writer")
    public WriterFactor getWriterFactor() {
        return this.writerFactor;
    }
    
    public void setWriterFactor(WriterFactor writerFactor) {
        this.writerFactor = writerFactor;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="writerByAtSomeone")
    public Set<Comment> getCommentsForAtSomeone() {
        return this.commentsForAtSomeone;
    }
    
    public void setCommentsForAtSomeone(Set<Comment> commentsForAtSomeone) {
        this.commentsForAtSomeone = commentsForAtSomeone;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="writer")
    public Set<DataSource> getDataSources() {
        return this.dataSources;
    }
    
    public void setDataSources(Set<DataSource> dataSources) {
        this.dataSources = dataSources;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="writerByWriterId")
    public Set<Comment> getCommentsForWriterId() {
        return this.commentsForWriterId;
    }
    
    public void setCommentsForWriterId(Set<Comment> commentsForWriterId) {
        this.commentsForWriterId = commentsForWriterId;
    }




}


